package network

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AddressPrefixType enumerates the values for address prefix type.
type AddressPrefixType string

const (
	// AddressPrefixTypeIPPrefix ...
	AddressPrefixTypeIPPrefix AddressPrefixType = "IPPrefix"
	// AddressPrefixTypeServiceTag ...
	AddressPrefixTypeServiceTag AddressPrefixType = "ServiceTag"
)

// PossibleAddressPrefixTypeValues returns an array of possible values for the AddressPrefixType const type.
func PossibleAddressPrefixTypeValues() []AddressPrefixType {
	return []AddressPrefixType{AddressPrefixTypeIPPrefix, AddressPrefixTypeServiceTag}
}

// ConfigurationType enumerates the values for configuration type.
type ConfigurationType string

const (
	// ConfigurationTypeConnectivity ...
	ConfigurationTypeConnectivity ConfigurationType = "Connectivity"
	// ConfigurationTypeSecurityAdmin ...
	ConfigurationTypeSecurityAdmin ConfigurationType = "SecurityAdmin"
)

// PossibleConfigurationTypeValues returns an array of possible values for the ConfigurationType const type.
func PossibleConfigurationTypeValues() []ConfigurationType {
	return []ConfigurationType{ConfigurationTypeConnectivity, ConfigurationTypeSecurityAdmin}
}

// ConnectivityTopology enumerates the values for connectivity topology.
type ConnectivityTopology string

const (
	// ConnectivityTopologyHubAndSpoke ...
	ConnectivityTopologyHubAndSpoke ConnectivityTopology = "HubAndSpoke"
	// ConnectivityTopologyMesh ...
	ConnectivityTopologyMesh ConnectivityTopology = "Mesh"
)

// PossibleConnectivityTopologyValues returns an array of possible values for the ConnectivityTopology const type.
func PossibleConnectivityTopologyValues() []ConnectivityTopology {
	return []ConnectivityTopology{ConnectivityTopologyHubAndSpoke, ConnectivityTopologyMesh}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// CreatedByTypeApplication ...
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey ...
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity ...
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser ...
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{CreatedByTypeApplication, CreatedByTypeKey, CreatedByTypeManagedIdentity, CreatedByTypeUser}
}

// DeleteExistingPeering enumerates the values for delete existing peering.
type DeleteExistingPeering string

const (
	// DeleteExistingPeeringFalse ...
	DeleteExistingPeeringFalse DeleteExistingPeering = "False"
	// DeleteExistingPeeringTrue ...
	DeleteExistingPeeringTrue DeleteExistingPeering = "True"
)

// PossibleDeleteExistingPeeringValues returns an array of possible values for the DeleteExistingPeering const type.
func PossibleDeleteExistingPeeringValues() []DeleteExistingPeering {
	return []DeleteExistingPeering{DeleteExistingPeeringFalse, DeleteExistingPeeringTrue}
}

// DeploymentStatus enumerates the values for deployment status.
type DeploymentStatus string

const (
	// DeploymentStatusDeployed ...
	DeploymentStatusDeployed DeploymentStatus = "Deployed"
	// DeploymentStatusDeploying ...
	DeploymentStatusDeploying DeploymentStatus = "Deploying"
	// DeploymentStatusFailed ...
	DeploymentStatusFailed DeploymentStatus = "Failed"
	// DeploymentStatusNotStarted ...
	DeploymentStatusNotStarted DeploymentStatus = "NotStarted"
)

// PossibleDeploymentStatusValues returns an array of possible values for the DeploymentStatus const type.
func PossibleDeploymentStatusValues() []DeploymentStatus {
	return []DeploymentStatus{DeploymentStatusDeployed, DeploymentStatusDeploying, DeploymentStatusFailed, DeploymentStatusNotStarted}
}

// GroupConnectivity enumerates the values for group connectivity.
type GroupConnectivity string

const (
	// GroupConnectivityDirectlyConnected ...
	GroupConnectivityDirectlyConnected GroupConnectivity = "DirectlyConnected"
	// GroupConnectivityNone ...
	GroupConnectivityNone GroupConnectivity = "None"
)

// PossibleGroupConnectivityValues returns an array of possible values for the GroupConnectivity const type.
func PossibleGroupConnectivityValues() []GroupConnectivity {
	return []GroupConnectivity{GroupConnectivityDirectlyConnected, GroupConnectivityNone}
}

// IntentPolicyBasedService enumerates the values for intent policy based service.
type IntentPolicyBasedService string

const (
	// IntentPolicyBasedServiceAll ...
	IntentPolicyBasedServiceAll IntentPolicyBasedService = "All"
	// IntentPolicyBasedServiceNone ...
	IntentPolicyBasedServiceNone IntentPolicyBasedService = "None"
)

// PossibleIntentPolicyBasedServiceValues returns an array of possible values for the IntentPolicyBasedService const type.
func PossibleIntentPolicyBasedServiceValues() []IntentPolicyBasedService {
	return []IntentPolicyBasedService{IntentPolicyBasedServiceAll, IntentPolicyBasedServiceNone}
}

// IsGlobal enumerates the values for is global.
type IsGlobal string

const (
	// IsGlobalFalse ...
	IsGlobalFalse IsGlobal = "False"
	// IsGlobalTrue ...
	IsGlobalTrue IsGlobal = "True"
)

// PossibleIsGlobalValues returns an array of possible values for the IsGlobal const type.
func PossibleIsGlobalValues() []IsGlobal {
	return []IsGlobal{IsGlobalFalse, IsGlobalTrue}
}

// Kind enumerates the values for kind.
type Kind string

const (
	// KindActiveBaseSecurityAdminRule ...
	KindActiveBaseSecurityAdminRule Kind = "ActiveBaseSecurityAdminRule"
	// KindCustom ...
	KindCustom Kind = "Custom"
	// KindDefault ...
	KindDefault Kind = "Default"
)

// PossibleKindValues returns an array of possible values for the Kind const type.
func PossibleKindValues() []Kind {
	return []Kind{KindActiveBaseSecurityAdminRule, KindCustom, KindDefault}
}

// KindBasicBaseAdminRule enumerates the values for kind basic base admin rule.
type KindBasicBaseAdminRule string

const (
	// KindBasicBaseAdminRuleKindBaseAdminRule ...
	KindBasicBaseAdminRuleKindBaseAdminRule KindBasicBaseAdminRule = "BaseAdminRule"
	// KindBasicBaseAdminRuleKindCustom ...
	KindBasicBaseAdminRuleKindCustom KindBasicBaseAdminRule = "Custom"
	// KindBasicBaseAdminRuleKindDefault ...
	KindBasicBaseAdminRuleKindDefault KindBasicBaseAdminRule = "Default"
)

// PossibleKindBasicBaseAdminRuleValues returns an array of possible values for the KindBasicBaseAdminRule const type.
func PossibleKindBasicBaseAdminRuleValues() []KindBasicBaseAdminRule {
	return []KindBasicBaseAdminRule{KindBasicBaseAdminRuleKindBaseAdminRule, KindBasicBaseAdminRuleKindCustom, KindBasicBaseAdminRuleKindDefault}
}

// KindBasicEffectiveBaseSecurityAdminRule enumerates the values for kind basic effective base security admin
// rule.
type KindBasicEffectiveBaseSecurityAdminRule string

const (
	// KindBasicEffectiveBaseSecurityAdminRuleKindCustom ...
	KindBasicEffectiveBaseSecurityAdminRuleKindCustom KindBasicEffectiveBaseSecurityAdminRule = "Custom"
	// KindBasicEffectiveBaseSecurityAdminRuleKindDefault ...
	KindBasicEffectiveBaseSecurityAdminRuleKindDefault KindBasicEffectiveBaseSecurityAdminRule = "Default"
	// KindBasicEffectiveBaseSecurityAdminRuleKindEffectiveBaseSecurityAdminRule ...
	KindBasicEffectiveBaseSecurityAdminRuleKindEffectiveBaseSecurityAdminRule KindBasicEffectiveBaseSecurityAdminRule = "EffectiveBaseSecurityAdminRule"
)

// PossibleKindBasicEffectiveBaseSecurityAdminRuleValues returns an array of possible values for the KindBasicEffectiveBaseSecurityAdminRule const type.
func PossibleKindBasicEffectiveBaseSecurityAdminRuleValues() []KindBasicEffectiveBaseSecurityAdminRule {
	return []KindBasicEffectiveBaseSecurityAdminRule{KindBasicEffectiveBaseSecurityAdminRuleKindCustom, KindBasicEffectiveBaseSecurityAdminRuleKindDefault, KindBasicEffectiveBaseSecurityAdminRuleKindEffectiveBaseSecurityAdminRule}
}

// ProvisioningState enumerates the values for provisioning state.
type ProvisioningState string

const (
	// ProvisioningStateDeleting ...
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed ...
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateSucceeded ...
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating ...
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{ProvisioningStateDeleting, ProvisioningStateFailed, ProvisioningStateSucceeded, ProvisioningStateUpdating}
}

// ScopeConnectionState enumerates the values for scope connection state.
type ScopeConnectionState string

const (
	// ScopeConnectionStateConflict ...
	ScopeConnectionStateConflict ScopeConnectionState = "Conflict"
	// ScopeConnectionStateConnected ...
	ScopeConnectionStateConnected ScopeConnectionState = "Connected"
	// ScopeConnectionStatePending ...
	ScopeConnectionStatePending ScopeConnectionState = "Pending"
	// ScopeConnectionStateRejected ...
	ScopeConnectionStateRejected ScopeConnectionState = "Rejected"
	// ScopeConnectionStateRevoked ...
	ScopeConnectionStateRevoked ScopeConnectionState = "Revoked"
)

// PossibleScopeConnectionStateValues returns an array of possible values for the ScopeConnectionState const type.
func PossibleScopeConnectionStateValues() []ScopeConnectionState {
	return []ScopeConnectionState{ScopeConnectionStateConflict, ScopeConnectionStateConnected, ScopeConnectionStatePending, ScopeConnectionStateRejected, ScopeConnectionStateRevoked}
}

// SecurityConfigurationRuleAccess enumerates the values for security configuration rule access.
type SecurityConfigurationRuleAccess string

const (
	// SecurityConfigurationRuleAccessAllow ...
	SecurityConfigurationRuleAccessAllow SecurityConfigurationRuleAccess = "Allow"
	// SecurityConfigurationRuleAccessAlwaysAllow ...
	SecurityConfigurationRuleAccessAlwaysAllow SecurityConfigurationRuleAccess = "AlwaysAllow"
	// SecurityConfigurationRuleAccessDeny ...
	SecurityConfigurationRuleAccessDeny SecurityConfigurationRuleAccess = "Deny"
)

// PossibleSecurityConfigurationRuleAccessValues returns an array of possible values for the SecurityConfigurationRuleAccess const type.
func PossibleSecurityConfigurationRuleAccessValues() []SecurityConfigurationRuleAccess {
	return []SecurityConfigurationRuleAccess{SecurityConfigurationRuleAccessAllow, SecurityConfigurationRuleAccessAlwaysAllow, SecurityConfigurationRuleAccessDeny}
}

// SecurityConfigurationRuleDirection enumerates the values for security configuration rule direction.
type SecurityConfigurationRuleDirection string

const (
	// SecurityConfigurationRuleDirectionInbound ...
	SecurityConfigurationRuleDirectionInbound SecurityConfigurationRuleDirection = "Inbound"
	// SecurityConfigurationRuleDirectionOutbound ...
	SecurityConfigurationRuleDirectionOutbound SecurityConfigurationRuleDirection = "Outbound"
)

// PossibleSecurityConfigurationRuleDirectionValues returns an array of possible values for the SecurityConfigurationRuleDirection const type.
func PossibleSecurityConfigurationRuleDirectionValues() []SecurityConfigurationRuleDirection {
	return []SecurityConfigurationRuleDirection{SecurityConfigurationRuleDirectionInbound, SecurityConfigurationRuleDirectionOutbound}
}

// SecurityConfigurationRuleProtocol enumerates the values for security configuration rule protocol.
type SecurityConfigurationRuleProtocol string

const (
	// SecurityConfigurationRuleProtocolAh ...
	SecurityConfigurationRuleProtocolAh SecurityConfigurationRuleProtocol = "Ah"
	// SecurityConfigurationRuleProtocolAny ...
	SecurityConfigurationRuleProtocolAny SecurityConfigurationRuleProtocol = "Any"
	// SecurityConfigurationRuleProtocolEsp ...
	SecurityConfigurationRuleProtocolEsp SecurityConfigurationRuleProtocol = "Esp"
	// SecurityConfigurationRuleProtocolIcmp ...
	SecurityConfigurationRuleProtocolIcmp SecurityConfigurationRuleProtocol = "Icmp"
	// SecurityConfigurationRuleProtocolTCP ...
	SecurityConfigurationRuleProtocolTCP SecurityConfigurationRuleProtocol = "Tcp"
	// SecurityConfigurationRuleProtocolUDP ...
	SecurityConfigurationRuleProtocolUDP SecurityConfigurationRuleProtocol = "Udp"
)

// PossibleSecurityConfigurationRuleProtocolValues returns an array of possible values for the SecurityConfigurationRuleProtocol const type.
func PossibleSecurityConfigurationRuleProtocolValues() []SecurityConfigurationRuleProtocol {
	return []SecurityConfigurationRuleProtocol{SecurityConfigurationRuleProtocolAh, SecurityConfigurationRuleProtocolAny, SecurityConfigurationRuleProtocolEsp, SecurityConfigurationRuleProtocolIcmp, SecurityConfigurationRuleProtocolTCP, SecurityConfigurationRuleProtocolUDP}
}

// UseHubGateway enumerates the values for use hub gateway.
type UseHubGateway string

const (
	// UseHubGatewayFalse ...
	UseHubGatewayFalse UseHubGateway = "False"
	// UseHubGatewayTrue ...
	UseHubGatewayTrue UseHubGateway = "True"
)

// PossibleUseHubGatewayValues returns an array of possible values for the UseHubGateway const type.
func PossibleUseHubGatewayValues() []UseHubGateway {
	return []UseHubGateway{UseHubGatewayFalse, UseHubGatewayTrue}
}
